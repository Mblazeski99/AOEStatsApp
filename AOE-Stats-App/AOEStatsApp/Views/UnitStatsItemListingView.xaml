<UserControl x:Class="AOEStatsApp.Views.UnitStatsItemListingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:AOEStatsApp.ViewModels" 
             xmlns:customControls="clr-namespace:LoadingSpinnerControl;assembly=LoadingSpinnerControl"
             d:DataContext="{d:DesignInstance Type=viewModels:UnitStatsItemListingViewModel, IsDesignTimeCreatable=True}"
             mc:Ignorable="d">

    <Grid IsHitTestVisible="{Binding EnableInput}">

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                
                <TextBlock Text="Units" Style="{StaticResource HeaderTextBlockStyle}" />

                <customControls:LoadingSpinner Thickness="1.5"
                                               Color="Black"
                                               IsLoading="{Binding IsLoading}"
                                               Margin="10 5 0 0"
                                               Diameter="20" />
                
            </StackPanel>

            <Button Grid.Column="1"
                    Margin="10 0 0 0"
                    Content="Create New Item"
                    HorizontalAlignment="Right"
                    Command="{Binding CreateNewItemCommand}" />

        </Grid>

        <Grid Grid.Row="1" Margin="0 10 0 0">
            
            <customControls:LoadingSpinner Thickness="5"
                                           Color="Black"
                                           Diameter="100"
                                           IsLoading="{Binding IsItemsGridLoading}" />

            <Grid Visibility="{Binding IsItemsGridLoading, Converter={StaticResource InverseBooleanToVisibilityConverter}}">

                <TextBlock Text="No Items Found" />
                
                <!--#region Since Gridviewcolumn doesn't have strecth options
                    these grid column definitions will contain the responsive widths 
                    and later will be bound to the gridviewcolumns -->
                
                <Grid Margin="15 0">

                    <Grid.ColumnDefinitions>

                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="150" />
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition MinWidth="100" Width="1*"/>
                        <ColumnDefinition MinWidth="100" Width="1*"/>
                        <ColumnDefinition Width="150"/>

                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" x:Name="col1"/>
                    <Grid Grid.Column="1" x:Name="col2"/>
                    <Grid Grid.Column="2" x:Name="col3"/>
                    <Grid Grid.Column="3" x:Name="col4"/>
                    <Grid Grid.Column="4" x:Name="col5"/>
                    <Grid Grid.Column="5" x:Name="col6"/>
                    <Grid Grid.Column="6" x:Name="col7"/>
                    <Grid Grid.Column="7" x:Name="col8"/>
                    <Grid Grid.Column="8" x:Name="col9"/>
                    <Grid Grid.Column="9" x:Name="col10"/>

                </Grid>
                
                <!--#endregion-->

                <ListView ItemsSource="{Binding UnitStatsItems}" HorizontalContentAlignment="Stretch">

                    <ListView.Style>
                        <Style TargetType="ListView">
                            
                            <Setter Property="Visibility" Value="Visible" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Items.Count}"
                                             Value="0">

                                    <Setter Property="Visibility" Value="Collapsed" />

                                </DataTrigger>
                            </Style.Triggers>
                            
                        </Style>
                    </ListView.Style>

                    <ListView.ItemContainerStyle>

                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>

                    </ListView.ItemContainerStyle>

                    <ListView.View>
                        <GridView>

                            <GridViewColumn Header="Unit Type" Width="{Binding ElementName=col1, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding UnitType}" Padding="10 0 20 0" HorizontalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Civilization" Width="{Binding ElementName=col2, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Civilization}" HorizontalAlignment="Center" Padding="10 0 20 0" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Food Cost" Width="{Binding ElementName=col3, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FoodCost}" Padding="0 0 20 0" HorizontalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Wood Cost" Width="{Binding ElementName=col4, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding WoodCost}" Padding="0 0 20 0" HorizontalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Gold Cost" Width="{Binding ElementName=col5, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding GoldCost}" Padding="0 0 20 0" HorizontalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Stone Cost" Width="{Binding ElementName=col6, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding StoneCost}" Padding="0 0 20 0" HorizontalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Is Done" Width="{Binding ElementName=col7, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsDone, Mode=OneWay}" IsEnabled="False" Padding="0 0 0 0" HorizontalAlignment="Center" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Attributes" Width="{Binding ElementName=col8, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Attributes}" Padding="0 0 20 0" HorizontalAlignment="Left" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Video Link" Width="{Binding ElementName=col9, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding VideoLink}" Padding="0 0 20 0" HorizontalAlignment="Left" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Actions" Width="{Binding ElementName=col10, Path=ActualWidth}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            
                                            <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.EditItemCommand}"
                                                    CommandParameter="{Binding }"
                                                    Content="Edit" />

                                            <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.DeleteItemCommand}"
                                                    CommandParameter="{Binding }"
                                                    Content="Delete" 
                                                    Margin="10 0 0 0" />
                                            
                                        </StackPanel>
                                        
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>

                </ListView>
                
            </Grid>

        </Grid>

    </Grid>

</UserControl>